{"version":3,"sources":["serviceWorker.js","lib/services.js","components/repos.js","components/stats.js","components/issues.js","components/userInfo.js","components/userProfile.js","components/search.js","index.js"],"names":["Boolean","window","location","hostname","match","Services","Object","classCallCheck","this","url","fetch","then","response","json","payload","method","headers","Content-Type","body","JSON","stringify","Repos","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","repos","render","listRepos","values","map","repo","i","react_default","a","createElement","className","key","name","Component","Stats","statsInfo","statsRepos","_resetStates","_renderStats","info","_generateStatsInfo","_setStatsInfo","reposInfo","_generateStatsRepos","_setStatsRepos","arr","setState","value","public_repos","public_gists","followers","following","reposArr","push","_getLanguages","join","statsObj","listStats","stat","languages","length","item","language","filter","pos","array","indexOf","Issues","issues","console","log","_fetchIssues","_this2","repoIssues","_renderIssues","listIssues","issue","_this3","_loop","has_issues","issues_url","replace","data","title","_setIssues","UserInfo","_setInfo","src","avatar_url","alt","login","_formatDate","created_at","href","username","obj","objectSpread","strDate","Date","toLocaleDateString","UserProfile","_tabs","params","active_tab","userInfo","error","_requestUser","_renderError","_renderUserProfile","react_router","path","component","_renderLoading","_setUsername","_setUserInfo","tab","role","aria-hidden","id","_renderUserInfo","onClick","_tabClickHandler","bind","_renderRepos","userInfo_UserInfo","stats_Stats","repos_Repos","issues_Issues","requestUrl","_fetchUser","_setError","_fetchRepos","repos_url","_setRepos","event","target","tagName","$oldActiveTab","closest","querySelector","concat","$newActiveTab","history","classList","contains","remove","add","_setActiveTab","Search","$search","_searchInput","onSubmit","_submitHandler","onChange","_setSearch","autoComplete","placeholder","_userProfile","preventDefault","searchTerm","toLowerCase","trim","userProfile_UserProfile","ReactDOM","react_router_dom","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e3d6b66.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default class Services {\r\n    constructor() {}\r\n\r\n    static fetch(url) {\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n    }\r\n\r\n    static update(url, payload) {\r\n        return fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload),\r\n        })\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class Repos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            repos: props.repos\r\n        };\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.repos) return;\r\n\r\n        const repos = Object.values(this.state.repos);\r\n        const listRepos = repos.map((repo, i) =>\r\n            <li className=\"list-group-item\" key={i}>{repo.name}</li>\r\n        );\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group list-group-flush\">{listRepos}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            statsInfo: [],\r\n            statsRepos: []\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this._resetStates(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._resetStates(this.props);\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {this._renderStats(this.state.statsInfo)}\r\n            {this._renderStats(this.state.statsRepos)}\r\n        </div>;\r\n    }\r\n\r\n    _resetStates(props) {\r\n        if (props.info) {\r\n            let statsInfo = this._generateStatsInfo(props.info);\r\n            this._setStatsInfo(statsInfo);\r\n        }\r\n        if (props.repos) {\r\n            let reposInfo = this._generateStatsRepos(props.repos);\r\n            this._setStatsRepos(reposInfo);\r\n        }\r\n    }\r\n\r\n    _setStatsInfo(arr) {\r\n        this.setState({statsInfo: arr});\r\n    }\r\n\r\n    _setStatsRepos(arr) {\r\n        this.setState({statsRepos: arr});\r\n    }\r\n\r\n    _generateStatsInfo(info) {\r\n        return [\r\n            {name: \"Public Repos\", value: info.public_repos},\r\n            {name: \"Public Gists\", value: info.public_gists},\r\n            {name: \"Followers\", value: info.followers},\r\n            {name: \"Following\", value: info.following}\r\n        ];\r\n    }\r\n\r\n    _generateStatsRepos(repos) {\r\n        let reposArr = Object.values(repos);\r\n        let arr = [];\r\n        arr.push({name: \"Languages\", value: this._getLanguages(reposArr).join(\", \")});\r\n        return arr;\r\n    }\r\n\r\n    _renderStats(statsObj) {\r\n        if (!statsObj) return;\r\n\r\n        const statsArr = Object.values(statsObj);\r\n        const listStats = statsArr.map((stat, i) => {\r\n                return <li className=\"list-group-item\" key={i}>{stat.name}: {stat.value}</li>;\r\n            }\r\n        );\r\n        return <ul className=\"list-group list-group-flush\">{listStats}</ul>;\r\n    }\r\n\r\n\r\n    _getLanguages(repos) {\r\n        let languages = [];\r\n        if (repos && repos.length > 0) {\r\n            languages = repos.map(item => item.language).filter((item, pos, array) => array.indexOf(item) === pos && item);\r\n        }\r\n        return languages;\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Services from './../lib/services';\r\n\r\n\r\n\r\nexport default class Issues extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            issues: []\r\n        };\r\n\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n        console.log(this.props);\r\n        this._fetchIssues(this.props.repos);\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"render\");\r\n        console.log(this.state);\r\n        if(!this.state.issues) return;\r\n\r\n        const listRepos = this.state.issues.map((repoIssues, i) =>\r\n            <li className=\"list-group-item\" key={i}>\r\n                <h5>{repoIssues.repo}</h5>\r\n                {this._renderIssues(repoIssues.issues)}\r\n            </li>\r\n        );\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group list-group-flush\">{listRepos}</ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderIssues(repoIssues) {\r\n        if(!repoIssues) return;\r\n\r\n        const listIssues = repoIssues.map((issue, i) =>\r\n            <li className=\"list-group-item\" key={i}>{issue}</li>\r\n        );\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group list-group-flush\">{listIssues}</ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    _setIssues(arr) {\r\n        this.setState({issues: arr})\r\n    }\r\n\r\n\r\n\r\n\r\n    _fetchIssues(repos) {\r\n\r\n        if(!repos) return;\r\n\r\n        for(let key in repos) {\r\n            let repo = repos[key];\r\n            let has_issues = repo.has_issues;\r\n            console.log(has_issues);\r\n            if (!has_issues) continue;\r\n\r\n            let issues_url = repo.issues_url.replace(\"{/number}\", \"\");\r\n            Services.fetch(issues_url)\r\n                .then(data => {\r\n                    if (!data.length) return;\r\n\r\n                    let issues = this.state.issues;\r\n                    let issue = {\r\n                        \"repo\": repo.name,\r\n                        \"issues\": data.map((issue) => issue.title)\r\n                    };\r\n                    issues.push(issue);\r\n\r\n                    this._setIssues(issues);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class UserInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            info: props.info\r\n        };\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this._setInfo(props.info);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"\">\r\n                    <img src={this.state.info.avatar_url} alt={this.state.info.login} className=\"rounded float-left\" />\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    <h3>{this.state.info.login}</h3>\r\n                    <span className=\"badge badge-pill badge-light\">Joined GitHub {this._formatDate(this.state.info.created_at)}</span>\r\n                    <a href={this.state.info.url}> {this.state.info.username}</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _setInfo(obj) {\r\n        this.setState({info: {...obj}});\r\n    }\r\n\r\n    _formatDate(strDate) {\r\n        if(!strDate) return;\r\n\r\n        let date = new Date(strDate);\r\n        return date.toLocaleDateString();\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Route} from 'react-router';\r\nimport Services from './../lib/services';\r\nimport Repos from \"./repos\";\r\nimport Stats from \"./stats\";\r\nimport Issues from \"./issues\"\r\nimport UserInfo from \"./userInfo\";\r\n\r\nconst url = \"https://api.github.com\";\r\n\r\nexport default class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._tabs = [\"stats\", \"repos\", \"issues\"];\r\n        const username = props.username || props.match.params.username;\r\n\r\n        this.state = {\r\n            active_tab: this._tabs[0],\r\n            username: username,\r\n            userInfo: null,\r\n            repos: null,\r\n            error: false\r\n        };\r\n\r\n        this._requestUser(username);\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return this._renderError();\r\n        }\r\n        if (this.state.username && this.state.userInfo) {\r\n            return <div>\r\n                {this._renderUserProfile()}\r\n                <Route path='/userProfile/:username/stats' component={Stats} />\r\n                <Route path='/userProfile/:username/repos' component={Repos} />\r\n                <Route path='/userProfile/:username/issues' component={Issues} />\r\n            </div>\r\n        }\r\n        return (<div> {this._renderLoading()}</div>);\r\n    };\r\n\r\n    componentWillReceiveProps(props) {\r\n        this._setUsername(props.username);\r\n        this._setUserInfo(null);\r\n        this._requestUser(props.username);\r\n    }\r\n\r\n    _setActiveTab(tab) {\r\n        this.setState({active_tab: tab});\r\n    }\r\n\r\n    _setRepos(obj) {\r\n        this.setState({repos: {...obj}});\r\n    }\r\n\r\n    _setUsername(value) {\r\n        this.setState({username: value});\r\n    }\r\n\r\n    _setUserInfo(obj) {\r\n        this.setState({userInfo: {...obj}});\r\n    }\r\n\r\n    _setError(value) {\r\n        this.setState({error: value});\r\n    }\r\n\r\n\r\n    _renderError() {\r\n        return (<div className=\"alert alert-danger\" role=\"alert\">\r\n            User not found!\r\n        </div>);\r\n    }\r\n\r\n    _renderLoading() {\r\n        return (\r\n            <div className=\"d-flex align-items-center\">\r\n                <strong>Loading...</strong>\r\n                <div className=\"spinner-border ml-auto\" role=\"status\" aria-hidden=\"true\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderUserProfile() {\r\n        return (\r\n            <div id=\"coder\" className=\"card\">\r\n\r\n                {this._renderUserInfo()}\r\n\r\n                <ul className=\"nav nav-tabs\" onClick={this._tabClickHandler.bind(this)}>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"#\" id={this._tabs[0]}>Statistics</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" id={this._tabs[1]}>Repositories</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\" id={this._tabs[2]}>Issues</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {this._renderRepos()}\r\n\r\n                {this._renderStats()}\r\n\r\n                {this._renderIssues()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _renderUserInfo() {\r\n        if (this.state.userInfo && this.state.username) {\r\n            return <UserInfo info={this.state.userInfo} />;\r\n        }\r\n    };\r\n\r\n    _renderStats() {\r\n        if ((this.state.userInfo || this.state.repos) && this.state.active_tab === this._tabs[0]) {\r\n            return <Stats info={this.state.userInfo} repos={this.state.repos} />;\r\n        }\r\n    };\r\n\r\n    _renderRepos() {\r\n        if (this.state.repos && this.state.active_tab === this._tabs[1]) {\r\n            return <Repos repos={this.state.repos} />;\r\n        }\r\n    }\r\n\r\n    _renderIssues() {\r\n        if (this.state.repos && this.state.active_tab === this._tabs[2]) {\r\n            return <Issues repos={this.state.repos} />;\r\n        }\r\n    }\r\n\r\n    _requestUser(username) {\r\n        const requestUrl = url + \"/users/\" + username;\r\n        this._fetchUser(requestUrl);\r\n    }\r\n\r\n    _fetchUser(url) {\r\n        Services.fetch(url)\r\n            .then(data => {\r\n                if (data.id) {\r\n                    this._setError(false);\r\n                    this._setUserInfo(data);\r\n                    this._fetchRepos(data.repos_url);\r\n                } else {\r\n                    this._setError(true);\r\n                }\r\n            });\r\n    }\r\n\r\n    _fetchRepos(url) {\r\n        Services.fetch(url)\r\n            .then(data => {\r\n                if (data.length) {\r\n                    this._setRepos(data);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    _tabClickHandler(event) {\r\n        if (event.target.tagName !== \"A\") {\r\n            return;\r\n        }\r\n\r\n        const $oldActiveTab = event.target.closest(\"UL\").querySelector(`#${this.state.active_tab}`);\r\n        const $newActiveTab = event.target;\r\n\r\n        if($newActiveTab.id === this._tabs[0]) {\r\n            this.props.history.push(\"/userProfile/\" + this.state.username );\r\n        }\r\n        if($newActiveTab.id === this._tabs[1]) {\r\n            this.props.history.push(\"/userProfile/\" + this.state.username + \"/repos\");\r\n        }\r\n        if($newActiveTab.id === this._tabs[2]) {\r\n            this.props.history.push(\"/userProfile/\" + this.state.username + \"/issues\");\r\n        }\r\n\r\n        if ($oldActiveTab && $oldActiveTab.classList.contains(\"active\")) {\r\n            $oldActiveTab.classList.remove(\"active\");\r\n        }\r\n        $newActiveTab.classList.add(\"active\");\r\n\r\n        this._setActiveTab($newActiveTab.id);\r\n    }\r\n\r\n    _formatDate(strDate) {\r\n        let date = new Date(strDate);\r\n        return date.toLocaleDateString();\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Route} from 'react-router';\r\n\r\nimport UserProfile from \"./userProfile\";\r\n\r\n\r\nexport default class Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\"\r\n        };\r\n        this.$search = null;\r\n\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' role='main'>\r\n\r\n                {this._searchInput()}\r\n\r\n                <Route path='/userProfile/:username' component={UserProfile} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _setUsername(value) {\r\n        this.setState({username: value});\r\n    }\r\n\r\n    _setSearch(event) {\r\n        this.$search = event.target;\r\n    }\r\n\r\n    _searchInput() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this._submitHandler.bind(this)}>\r\n                    <div className='form-group'>\r\n                        <input name='search' onChange={this._setSearch.bind(this)} autoComplete='off' placeholder='Search username...' className='form-control' />\r\n                    </div>\r\n                </form>\r\n                {this._userProfile()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    _submitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.$search) return;\r\n\r\n        this.props.history.push(\"/\");\r\n        this._setUsername(\"\");\r\n\r\n        const value = this.$search.value;\r\n        const searchTerm = value.toLowerCase().trim();\r\n\r\n        this._setUsername(searchTerm);\r\n        this.props.history.push(\"/userProfile/\" + searchTerm);\r\n    }\r\n\r\n\r\n    _userProfile() {\r\n        if (!this.state.username) return;\r\n\r\n        return <UserProfile username={this.state.username} history={this.props.history} />;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Search from './components/search';\r\n\r\nReactDOM.render(\r\n    <Router basename=\"/\">\r\n        <div>\r\n            <Route path=\"/\" component={Search} />\r\n        </div>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}