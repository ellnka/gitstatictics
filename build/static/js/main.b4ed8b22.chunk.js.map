{"version":3,"sources":["serviceWorker.js","lib/services.js","components/userProfile.js","components/search.js","index.js"],"names":["Boolean","window","location","hostname","match","Services","Object","classCallCheck","this","url","fetch","then","response","json","payload","method","headers","Content-Type","body","JSON","stringify","UserProfile","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","userInfo","repos","languages","userCreatedDate","Date","parse","created_at","render","_fetchRepos","repos_url","react_default","a","createElement","id","className","login","src","avatar_url","alt","toLocaleDateString","href","aria-hidden","username","public_repos","join","followers","following","obj","setState","arr","_this2","data","console","log","length","_setRepos","_getLanguages","map","item","language","filter","pos","array","indexOf","_setLang","Component","Search","search","user","_setSearch","bind","assertThisInitialized","event","target","value","onSubmit","_submitHandler","name","onChange","autoComplete","placeholder","_userProfile","role","_searchInput","preventDefault","_setUser","requestUrl","toLowerCase","trim","_fetchUser","total_count","user_url","items","userProfile_UserProfile","ReactDOM","react_router_dom","basename","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4ed8b22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default class Services {\r\n    constructor() {}\r\n\r\n    static fetch(url) {\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n    }\r\n\r\n    static update(url, payload) {\r\n        return fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload),\r\n        })\r\n    }\r\n\r\n\r\n}","'use strict';\r\n\r\nimport React, {Component} from 'react';\r\nimport autoBind from 'react-autobind';\r\nimport Services from './../lib/services';\r\n\r\nconst url = \"https://api.github.com/search/users\";\r\n\r\nexport default class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userInfo: props.userInfo,\r\n            repos: null,\r\n            languages: []\r\n        };\r\n        \r\n        this.userCreatedDate = new Date(Date.parse(this.state.userInfo.created_at));\r\n        this.render();\r\n        this._fetchRepos(this.state.userInfo.repos_url);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"coder\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-2-xl col-3-l col-4-m meta\">\r\n                        <div className=\"padh\">\r\n                            <header><h3>{this.state.userInfo.login}</h3></header>\r\n                            <img src={this.state.userInfo.avatar_url} alt={this.state.userInfo.login} className=\"img-fluid\"/>\r\n                            <p>Joined GitHub {this.userCreatedDate.toLocaleDateString()}</p>\r\n                            <a href=\"https://github.com/{this.state.userInfo.login}\" className=\"block\">\r\n                                <i aria-hidden=\"true\" className=\"fa fa-github\"></i>\r\n                                {this.state.userInfo.username}\r\n                            </a>\r\n                        </div>\r\n                        <ul>\r\n                            <li><p>Pushed to repos: {this.state.userInfo.public_repos} </p></li>\r\n                            <li><p>Main languages: {this.state.languages.join(\", \")} </p></li>\r\n                            <li><p>Followers:{this.state.userInfo.followers} </p></li>\r\n                            <li><p>Following: {this.state.userInfo.following}</p></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _setRepos(obj) {\r\n        this.setState({repos: obj});\r\n    }\r\n\r\n    _setLang(arr) {\r\n        this.setState({languages: arr});\r\n    }\r\n\r\n    _fetchRepos(url) {\r\n        Services.fetch(url)\r\n            .then(data => {\r\n                console.log(data);\r\n                console.log(data.length);\r\n                if (data.length) {\r\n                    this._setRepos(data);\r\n                    this._getLanguages();\r\n                }\r\n            });\r\n    }\r\n\r\n    _getLanguages() {\r\n        if (this.state.repos && this.state.repos.length > 0) {\r\n            let languages = this.state.repos.map( item => item.language).filter( (item, pos, array) =>  array.indexOf(item) === pos && item);\r\n            this._setLang(languages);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","'use strict';\r\n\r\nimport React, {Component} from 'react';\r\nimport Services from './../lib/services';\r\nimport UserProfile from \"./userProfile\";\r\n\r\nconst url = \"https://api.github.com/search/users\";\r\n\r\nexport default class Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: '',\r\n            user: null\r\n        };\r\n\r\n\r\n        this._setSearch = this._setSearch.bind(this);\r\n\r\n        this.render();\r\n\r\n\r\n    }\r\n\r\n    _setSearch(event) {\r\n        this.setState({search: event.target.value});\r\n    }\r\n\r\n    _setUser(obj) {\r\n        this.setState({user: obj});\r\n    }\r\n\r\n\r\n    _searchInput() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this._submitHandler.bind(this)}>\r\n                    <div className='form-group'>\r\n                        <input name='search' onChange={this._setSearch} autoComplete='off' placeholder='Search...'\r\n                               className='form-control'/>\r\n                    </div>\r\n                </form>\r\n                {this._userProfile()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container' role='main'>\r\n                {this._searchInput()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _search() {\r\n    }\r\n\r\n    _pressKeyHandler() {\r\n    }\r\n\r\n\r\n    _submitHandler(event) {\r\n        event.preventDefault();\r\n        this._setUser(null);\r\n\r\n        const value = this.state.search;\r\n        const searchTerm = value.toLowerCase().trim();\r\n\r\n        const requestUrl = url + \"?q=\" + searchTerm;\r\n        this._fetchUser(requestUrl);\r\n    }\r\n\r\n    _fetchUser(url) {\r\n        Services.fetch(url)\r\n            .then(data => {\r\n                if (data.total_count) {\r\n                    let user_url = data.items[0].url;\r\n                    Services.fetch(user_url)\r\n                        .then(data => {\r\n                            this._setUser(data);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    _userProfile() {\r\n        if (this.state.user) {\r\n            return <UserProfile userInfo={this.state.user}/>;\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Search from './components/search';\n\nReactDOM.render(\n    <BrowserRouter basename=\"/gitstats\">\n        <div>\n            <Route exact path=\"/\" component={Search}/>\n        </div>\n    </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}